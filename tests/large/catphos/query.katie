// Analysis of a substrate-kinase model, as done in the original paper

query 'lifespan_phos.csv'
match b:{ s:S(d[/1]), k:K(d[/1], x{p}) }
and first u:{ s:S(d[/.]) } after b
return (time[u] - time[b])

query 'lifespan_unphos.csv'
match b:{ s:S(d[/1]), k:K(d[/1], x{u}) }
and first u:{ s:S(d[/.]) } after b
return (time[u] - time[b])

query 'first_phos.csv'
match c:{ +s:S }
and first p:{ s:S(x{/p}) } after c
return time[p]

query 'analyze_cycles.csv' {'substrate_id', 'binding_time', 'unbinding_time'}
match b:{ s:S(d[/1]), k:K(d[/1], x{u}) }
and first u:{ s:S(d[/.]) } after b
when time[b] >= 5
return (agent_id{s}, time[b], time[u])


// Below, we consider variants of the bond lifespan analysis
// where we test the state of the kinase when the bond breaks
// and not when it forms (results should be similar but not identical)
// All variants 1, 2 and 3 should give equivalent results and variant
// 3 is currently unsupported by the engine.

query 'lifespan_variant_1.csv'
match b:{ S(d[/1]), k:K(d[/1]) }
and first u:{ k:K(d[/.]) } after b
when int_state[.u]{k.x} = 'p'
return (time[u] - time[b])

query 'lifespan_variant_2.csv'
match u:{ k:K(x{p}, d[/.]) }
and last b:{ k:K(d[/d.S]) } before u
return (time[u] - time[b])

// // Not supported because of ambiguity in the third u event
// // This could be improved since we know what k is from the defining relation of u.
query 'lifespan_variant_3.csv'
match b:{ S(d[/1]), k:K(d[/1]) }
and first u:{ k:K(d[/.]) } after b
and u:{ k:K(x{p}) }
return (time[u] - time[b])